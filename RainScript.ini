;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;   RAINSCRIPT - Yamajac, /u/Yamatjac, @Yamajac#3141, CharlotteConnolly@yamajac.com
;
;   The most fully featured scripting language to ever exist in Rainmeter. 
;   (Though it's also the only one so maybe I'm cheating)
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; All the boring shit
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[Rainmeter]
Update = 16
DefaultUpdateDivider = -1
[Metadata]
Name        = RainScript
Author      = Yamajac - /u/Yamatjac
Information = A scripting language built in rainmeter .ini files
Version     = Alpha

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Some more boring shit
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[Variables]
TerminalWidth    = 400
TerminalHeight   = 150
TerminalBG       = 0,0,0
TerminalFG       = 255,255,255
TerminalOpacity  = 200
TerminalText     = RainScript [Version 0.0.1]#CRLF#Made by Yamajac#CRLF#
TerminalFontSize = 13

DELAY = 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Draw the terminal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[TerminalContainer]
Meter = Shape
Group = TerminalDraw
Shape = Rectangle 0,0, #TerminalWidth#, #TerminalHeight# | FillColor 0,0,0,#TerminalOpacity# | StrokeWidth 0
[TerminalBG]
Meter = Shape
Group = TerminalDraw
Shape = Rectangle 0, 0, #TerminalWidth#, #TerminalHeight# | FillColor #TerminalBG# | StrokeWidth 0
Container = TerminalContainer
LeftMouseUpAction = [!CommandMeasure InputText "ExecuteBatch 1"]
[InputLine]
Meter = String
Group = TerminalDraw
Y     = #TerminalHeight#
W     = #TerminalWidth#
Text  = #TerminalText#
FontColor        = #TerminalFG#
Fontsize         = #TerminalFontSize#
ClipString       = 2
StringAlign      = LeftBottom
Container        = TerminalContainer
DynamicVariables = 1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Check if file exists and is a valid filetype then parse the lines
; And send valid lines to the relevant measures for handling stuff
; If a line isn't valid, throw an error 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[InputText]
Measure      = Plugin
Plugin       = InputText
FocusDismiss = 0 
FontSize     = #TerminalFontsize#
FontColor    = #TerminalFG#
SolidColor   = #TerminalBG#
W            = #TerminalWidth#
Command1     = [!SetVariable Script "$UserInput$"][!UpdateMeasure ValidateFile]

[ValidateFile]
Measure  = String
Group    = NoUpdate
String   = #Script#
Disabled = 1
DynamicVariables = 1
RegExpSubstitute = 1
Substitute       = ".*\.rs$" : ""
IfMatchMode      = 1
IfMatch          = "."
IfMatchAction    = [!SetVariable TerminalText "#TerminalText##CRLF##Script# is not a valid RainScript file"][!UpdateMeterGroup TerminalDraw][!Redraw]
IfNotMatchAction = [!SetOption GrabScript URL "file://#CURRENTPATH##Script#"][!CommandMeasure GrabScript "reset"][!CommandMeasure GrabScript "Update"][!UpdateMeasure GrabScript]

[GrabScript]
Measure     = WebParser
URL         = file://C:\Users\Charlotte\AppData\Roaming\Rainmeter\Rainmeter.ini
RegExp      = (?s)(.*)
Group       = NoUpdate
Disabled    = 1
ForceReload = 1
OnConnectErrorAction = [!SetVariable TerminalText "#TerminalText##CRLF#RainScript can not find #Script#"][!UpdateMeterGroup TerminalDraw][!Redraw]
FinishAction       = [!SetVariable TerminalText "#TerminalText##CRLF#Running script: #Script##CRLF#"][!SetOption ParseScript MinValue 0][!UpdateMeasure ParseScript]


[ParseScript]
Measure  = String
String   = [GrabScript]
MinValue = 0
DynamicVariables = 1
RegExpSubstitute = 1
Substitute       = "(?s)([^\r\n]*[\r\n\s]*){[&[#CURRENTSECTION]:MinValue]}([^\r\n]*[\r\n\s]*).*" : "\2", "\$(.*?)\$" : "[#\1]", "\\r\\n" : "[#*CRLF*]" 
IfMatchMode    = 1
IfMatch        = ^[\r\n;]
IfMatchAction  = [!SetOption ParseScript MinValue ([ParseScript:MinValue]+1)][!Delay #DELAY#][!UpdateMeasure ParseScript]
IfMatch2       = ^\s*?print\(.*?\)
IfMatchAction2 = [!UpdateMeasure Print]
IfMatch3       = [^\s].*?:=.*?[^\s]
IfMatchAction3 = [!UpdateMeasure GetVariableName]



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Keywords/Operators/whatever
; IDK what the actual terminology is for programming language stuff dawg
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


; Print functions
[Print]
Measure = String
String  = [ParseScript]
DynamicVariables = 1
RegExpSubstitute = 1
Substitute       = "(?s)^\s*?print\((.*?)\).*" : "\1"
IfMatchMode    = 1
IfMatch        = ^".*?"
IfMatchAction  = [!UpdateMeasure PrintString]
[PrintString]
Measure  = String
String   = [Print]
Group    = NoUpdate
Disabled = 1
DynamicVariables = 1
RegExpSubstitute = 1
Substitute       = ".(.*)." : "\1"
OnUpdateAction   = [!SetVariable TerminalText """#TerminalText#[&PrintString]"""][!UpdateMeterGroup TerminalDraw][!SetOption ParseScript MinValue ([ParseScript:MinValue]+1)][!Delay #DELAY#][!UpdateMeasure ParseScript]

; Variable functions
[GetVariableName]
Measure  = String
String   = [ParseScript]
Group    = NoUpdate
Disabled = 1
DynamicVariables = 1
RegExpSubstitute = 1
Substitute       = "(?s)\s*?([^\s]*)[\s]*:=[\s]*([^\r\n]*).*" : "\1"
OnUpdateAction = [!UpdateMeasure SetVariable]
[SetVariable]
Measure  = String
String   = [ParseScript]
Group    = NoUpdate
Disabled = 1
DynamicVariables = 1
RegExpSubstitute = 1
Substitute       = "(?s)\s*?([^\s]*)[\s]*:=[\s]*([^\r\n]*).*" : "\2"
OnUpdateAction = [!SetVariable [GetVariableName] [&SetVariable]][!SetOption ParseScript MinValue ([ParseScript:MinValue]+1)][!Delay #DELAY#][!UpdateMeasure ParseScript]


[NoUpdate]
Measure = Calc
OnUpdateAction = [!EnableMeasureGroup NoUpdate][!DisableMeasure #CURRENTSECTION#]